<?php
require_once WP_PLUGIN_DIR . "/woocommerce/woocommerce.php";

if (!defined('ABSPATH')) {
    exit;
}

use JarbitLira\Credomatic\CredomaticClient;

/**
 * Integration Demo Integration.
 *
 * @package  Credomatic-Gateway
 * @category Integration
 * @author   WooThemes
 */
class Credomatic_Gateway extends WC_Payment_Gateway_CC
{
    /** @var bool Whether or not logging is enabled */
    public static $log_enabled = false;

    /** @var WC_Logger Logger instance */
    public static $log = false;

    private $user_name;
    private $private_key;
    private $public_key;

    public function __construct()
    {

        $this->init_form_fields();
        $this->init_settings();

        $this->setup_properties();

//        self::$log_enabled = $this->debug;
//
        $this->user_name = $this->get_option('user_name');
        $this->private_key = $this->get_option('private_key');
        $this->public_key = $this->get_option('public_key');

        add_action( 'woocommerce_update_options_payment_gateways_' . $this->id, array( $this, 'process_admin_options' ) );
    }

    /**
     * Setup general properties for the gateway.
     */
    protected function setup_properties()
    {
        $this->id = 'credomatic-integration';
        $this->plugin_id = 'credomatic_';
        $this->has_fields = true;

        $this->title = __('Credit Card', $this->id);
        $this->method_title = __('Credomatic Integration', $this->id);
        $this->method_description = __('Have your customers pay with credit cards with credomatic gateway.', $this->id);
    }


    public function init_form_fields()
    {
        $this->form_fields = array(
            'enabled' => array(
                'title' => __('Enable/Disable', 'woocommerce'),
                'type' => 'checkbox',
                'label' => __('Enable credit card', 'woocommerce'),
                'default' => 'no',
            ),
            'title' => array(
                'title' => __('Title', 'woocommerce'),
                'type' => 'text',
                'description' => __('This controls the title which the user sees during checkout.', 'woocommerce'),
                'default' => __('Credit card payment', $this->id),
                'desc_tip' => true,
            ),
            'user_name' => array(
                'title' => __('Credomatic username', $this->id),
                'type'        => 'text',
            ),
            'private_key' => array(
                'title' => __('Credomatic private key', $this->id),
                'type'        => 'password',
            ),
            'public_key' => array(
                'title' => __('Credomatic public key', $this->id),
                'type'        => 'password',
            ),
        );
    }

    public function process_admin_options(){

    }

    function is_available()
    {
        return parent::is_available(); // TODO: Change the autogenerated stub
    }

    public function form()
    {
        parent::form(); // TODO: Change the autogenerated stub
    }

    public function process_payment($order_id)
    {
        $credomaticClient = new CredomaticClient($this->user_name, $this->private_key, $this->public_key);

        $order = wc_get_order($order_id);

        $ccNumber = $cvv = $ccexp = '';

        $credomaticClient->processPayment($order_id, 0, $ccNumber, $cvv, $ccexp);

        if ($credomaticClient->succeeded()) {
            return array(
                'result' => 'success',
                'redirect' => $this->get_return_url($order, $this->testmode)
            );
        }

        return array(
            'result' => 'fail',
            'redirect' => $this->get_return_url($order, $this->testmode)
        );
    }

    public function generate_account_details_html(){

    }
}

